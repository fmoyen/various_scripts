#!/bin/bash

###################################################################################################################################
# Date: 2019/12
# Author: Fabrice MOYEN
# Objective: Get all users list per system


###################################################################################################################################
# PARAMETERS
#
Hosts=`cat ../../../ipmi/PasswordFile | awk '{print $1}'`
eval ListDir=~`whoami`/CAPI/SecurityToolsOutput/ExistingUsersList/LISTS # generic $HOME is not OK to use as this script is run with sudo (so $HOME=/root)


###################################################################################################################################
# FUNCTIONS
#

function usage
{
  echo
  echo "`basename $0` Usage:"
  echo "-------------------------"
  echo
  echo "  Objective: Generate a file per system which gives the list of all users with connection rights (users with \"*sh\" shell declared in /etc/passwd)"
  echo
  echo -e "    + systems list: \c"
  echo $Hosts
  echo "    + Result files Directory: $ListDir"
  echo
  echo "  You may run UsersListAnalysis script after running this `basename $0` script"
  echo
  echo "  -h / -? / --help: shows this usage info" 
  echo
  exit 0
}


###################################################################################################################################
# When parameters are given when launching the script
#

if [ $# -gt 0 ]
then
  WhatToDo=$1
  if [ "$WhatToDo" == "-h" ] || [ "$WhatToDo" == "-?" ] || [ "$WhatToDo" == "--help" ]; then
    usage
  fi
fi


###################################################################################################################################
# MAIN
# Get all existing users (who can login) per system
# One file per system

echo; echo "--------------------"
echo -e "Which user do you want to use for doing SSH to systems ? : \c"
read WhoAmI

echo; echo "--------------------"
echo "List of systems:"
echo $Hosts
echo
echo "Are you OK with this list (just type ENTER) or do you want to provide your list ?:"
echo -e "-> \c"
read MyHosts
if [[ $MyHosts != "" ]]; then Hosts=$MyHosts; fi

echo; echo "--------------------"
echo "Output directory:"
echo $ListDir

mkdir -p $ListDir # if needed

for i in $Hosts; do
   echo; echo "--------------------"
   echo $i
   Hostname=$i
   ssh ${WhoAmI}@$i "grep \"sh$\" /etc/passwd" | awk -F: '{print $1}' | grep -v root > $ListDir/ExistingUsersList_$Hostname.txt
   echo "  --> $ListDir/ExistingUsersList_$Hostname.txt"
done
echo "--------------------"; echo
