#!/bin/bash

###################################################################################################################################
# Date: 2019/12
# Author: Fabrice MOYEN
# Objective: Get the output of chage -l for all users who can connect


#####################################################################################
# FUNCTIONS
#

function usage
{
  echo
  echo "`basename $0` Usage:"
  echo "-------------------------"
  echo
  echo "  + script to be run on the system you want to analyse"
  echo
  echo "  + You need to be root to use the script (sudo)"
  echo
  echo "  + Objective: Get the output of chage -l for all users who can connect (users with bash shell declared in /etc/passwd)"
  echo "  + -h / -? / --help: shows this usage info" 
  echo
  exit 0
}


###################################################################################################################################
# When parameters are given when launching the script
#

if [ $# -gt 0 ]
then
  WhatToDo=$1
  if [ "$WhatToDo" == "-h" ] || [ "$WhatToDo" == "-?" ] || [ "$WhatToDo" == "--help" ]; then
    usage
  fi
fi


###################################################################################################################################
# Check if root
#

if [ `whoami` != "root" ]
then
  echo
  echo "You're not root. You need to execute this script with root privileges"
  echo "Think of sudo command..."
  echo "Exiting"
  exit 0
fi


###################################################################################################################################
# Parameters
#

ExistingUsersList=( $(grep "bash$" /etc/passwd | awk -F: '{print $1}' | grep -v root) )


###################################################################################################################################
# Main
#

echo;echo "-----------------------------------------------------------------------------------------------------------"
echo "Users list:"
echo "  -->  ${ExistingUsersList[@]}"

echo;echo "-----------------------------------------------------------------------------------------------------------"
UsersIndexMax=$((${#ExistingUsersList[*]}-1))
for userindex in `seq 0 $UsersIndexMax`; do
   user=${ExistingUsersList[$userindex]}
   echo;echo $user
   echo "--------------"
   chage -l $user
done
echo "-----------------------------------------------------------------------------------------------------------"; echo


