#!/bin/bash


###################################################################################################################################
# Date: 2021/01
# Author: Fabrice MOYEN
# Objective: Prevent direct root login (SSH) login

# STEPS WE SHOULD DO:
#  - check if root
#  - Configure sshd in order to prevent root login permission

# RULES to follow:
#  - Root login prohibited


###################################################################################################################################
# Parameters
#

Input=/etc/ssh/sshd_config
TMPDir=/tmp
TMPFile=$TMPDir/`basename $0`.tmp ; > $TMPFile
trap "rm $TMPFile" EXIT
EXIT_cmd=`trap -p EXIT | awk -F"'" '{print $2}'` # get the commands for the already configured trap for EXIT signal

WhoAmI=`who am i| awk '{print $1}'` # "whoami" not working because of sudo
eval OutputFile=~$WhoAmI/CAPI/SecurityToolsOutput/SSHRootLogin.out # generic $HOME is not OK to use as this script is run with sudo (so $HOME=/root)


###################################################################################################################################
# Functions
#

function usage
{
  echo
  echo "`basename $0` Usage:"
  echo "-------------------------"
  echo
  echo "  + script to be run on the system you want to tune"
  echo
  echo "  + You need to be root to use the script (sudo)"
  echo
  echo "  + Objective: Prevent direct root login (SSH) login"
  echo
  echo "  + -h / -? / --help: shows this usage info"
  echo
  echo "This Tool Output File will be: $OutputFile"
  echo
  exit 0
}

function DoBackupFile {
   today=$(date +%Y-%m-%d-%H%M%S)
   file=$1
   if [[ $# -eq 2 ]]; then 
      destdir=$2
      BackupFile="$destdir/`basename $file`-$today.bak"
   else
      BackupFile="$file-$today.bak"
   fi
   echo;echo "-----------------------------------------------------------------------------------------------------------"
   echo "Backing up file $file ---> $BackupFile"
   rsync -av $file $BackupFile >/dev/null
   ls -la $file $BackupFile
   echo "-----------------------------------------------------------------------------------------------------------"
}


###################################################################################################################################
# When parameters are given when launching the script
#

if [ $# -gt 0 ]
then
  WhatToDo=$1
  if [ "$WhatToDo" == "-h" ] || [ "$WhatToDo" == "-?" ] || [ "$WhatToDo" == "--help" ]; then
    usage
  fi
fi


###################################################################################################################################
# Check if root
#

if [ `whoami` != "root" ]
then
  echo
  echo "You're not root. You need to execute this script with root privileges"
  echo "Think of sudo command..."
  echo "Exiting"
  exit 0
fi


###################################################################################################################################
# MAIN
#
{
echo; echo; echo "###################################################################################################################################"
hostname | tr '[:lower:]' '[:upper:]'
echo "-----------------------------------------------------------------------------------------------------------------------------------"
echo "$WhoAmI --> `basename $0` "
date
echo
echo "Output report file: $OutputFile"
echo "###################################################################################################################################"; echo


#----------------------------------------------------------------------------------------------------------------------------------
# Backuping $Input file

DoBackupFile $Input 


#----------------------------------------------------------------------------------------------------------------------------------
# Doing the work into $Input file

mkdir -p `dirname $OutputFile`  # mkdir of $OutputFile directory if needed
 
sed -i 's/^PermitRootLogin/#PermitRootLogin/g' $Input  # Comment any PermitRootLogin line

cat << EOF >> $Input  # Adding "PermitRootlogin no"

# Direct root login is prohibited
PermitRootLogin no
EOF


echo;echo "-----------------------------------------------------------------------------------------------------------"
echo "diff $BackupFile $Input"
echo "----------------------------------"
diff $BackupFile $Input
echo "-----------------------------------------------------------------------------------------------------------"

echo;echo "-----------------------------------------------------------------------------------------------------------"
echo "systemctl restart sshd.service"
systemctl restart sshd.service
echo "-----------------------------------------------------------------------------------------------------------"

echo
} | tee -a $OutputFile

chown $WhoAmI:$WhoAmI $OutputFile
