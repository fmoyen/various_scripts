#/bin/bash

#####################################################################################
# Date: 2020/01/13
# Author: Fabrice MOYEN
# Objective: Simplifying ipmitool commands with menu and a user/password file

#####################################################################################
# Parameters
#
# Format: server_name server-ipmi ipmiuser ipmipassword
# example: lewen05 lewen05-ipmi root mypassword 
PasswordFile=/home/fabrice/PasswordFile
MyAccount=`whoami`
ShowCMD=no
SSHOptions='-o "StrictHostKeyChecking no"'
ulimit -c unlimited # unlimited size for core dumps

#####################################################################################
# FUNCTIONS
#

function DisplayCMD
{
  if [[ $ShowCMD == "yes" ]]; then
    VisibleCMD=$CMD
  else
    VisibleCMD=`echo $RawCMD | sed 's/$ipmiPassword/XXXX/g'`
    VisibleCMD=`eval echo $VisibleCMD`
  fi

  echo $VisibleCMD
}

#####################################################################################
# MAIN
#

Choice=1
Server=""

while [ $Choice -eq 1 ]
do
  clear

  echo "IPMITOOL for Power Servers"
  echo "--------------------------"
  echo -e "Chosen Server: \c"
  echo $Server |tr '[:lower:]' '[:upper:]'
  echo
  echo "Showing Commands WITH passwords: $ShowCMD"
  echo "Password File: $PasswordFile"
  echo
  echo "My Account (for linux option): $MyAccount"
  echo
  echo "server | s)            Choose the server"
  echo "show)                  Show the commands with passwords or not"
  echo "account | a)               Change my account ID (for linux option)"
  echo
  echo "power status | status) Display power status"
  echo "power on | on)         Activate power"
  echo "power off | off)       Deactivate power"
  echo "power cycle | cycle)   Power cycle (off then on)"
  echo
  echo "sol activate | sol)    Deactivate sol console (in case it's needed) then activate it"
  echo "sol deactivate)        Just deactivate sol console "
  echo "ping)                  Ping FSP/BMC/IMM"
  echo
  echo "shell)                 ipmitool shell to FSP/BMC/IMM"
  echo "ssh)                   Ssh to FSP/BMC/IMM"
  echo "linux)                 Ssh to Linux OS"
  echo
  echo "exit | x)              Exit this IPMI Tool"
  echo
  echo -e "? --> \c"

  read WhatToDo
  echo

  case $WhatToDo in

    #------------------------------------------------------------------------------------
    # Server Requested

    server|s)
      echo
      echo "List of available server:"
      echo "-------------------------"
      cut -d" " -f1 $PasswordFile
      ServersList=`cut -d" " -f1 $PasswordFile`
      echo
      echo "Which Server do you want to connect: "
      echo "(you may only give the beginning of server name)"
      read Server

      # Allowing to tap only the beginning of server name
      for i in $ServersList ; do
        if [[ $i =~ $Server ]]; then  Server=$i; fi
      done


      ipmiServer=`grep $Server $PasswordFile | cut -d" " -f2`
      ipmiUser=`grep $Server $PasswordFile | cut -d" " -f3`
      ipmiPassword=`grep $Server $PasswordFile | cut -d" " -f4`

    ;;

    #------------------------------------------------------------------------------------
    # Show Commands with password or not

    show)
      if [[ $ShowCMD == "yes" ]]; then ShowCMD=no; else ShowCMD=yes; fi
    ;;

    #------------------------------------------------------------------------------------
    # My Account (for login option)

    account|a)
      echo -e "My account for login to linux operation: \c"
      read MyAccount
    ;;

    #------------------------------------------------------------------------------------
    # power status

    "power status"|status)
      RawCMD='ipmitool -I lanplus -H ${ipmiServer} -U $ipmiUser -P $ipmiPassword power status'
      CMD=`eval echo $RawCMD`

      DisplayCMD
      $CMD

      echo;echo "Hit ENTER"
      read a
    ;;

    #------------------------------------------------------------------------------------
    # power ON

    "power on"|on)
      RawCMD='ipmitool -I lanplus -H ${ipmiServer} -U $ipmiUser -P $ipmiPassword power on'
      CMD=`eval echo $RawCMD`

      DisplayCMD
      $CMD

      echo;echo "Hit ENTER"
      read a
    ;;

    #------------------------------------------------------------------------------------
    # power OFF

    "power off"|off)
      RawCMD='ipmitool -I lanplus -H ${ipmiServer} -U $ipmiUser -P $ipmiPassword power off'
      CMD=`eval echo $RawCMD`

      DisplayCMD
      $CMD

      echo;echo "Hit ENTER"
      read a
    ;;

    #------------------------------------------------------------------------------------
    # power cycle

    "power cycle"|cycle)
      RawCMD='ipmitool -I lanplus -H ${ipmiServer} -U $ipmiUser -P $ipmiPassword power cycler'
      CMD=`eval echo $RawCMD`

      DisplayCMD
      $CMD

      echo;echo "Hit ENTER"
      read a
    ;;

    #------------------------------------------------------------------------------------
    # sol activate

    "sol activate"|sol)
      RawCMD='ipmitool -I lanplus -H ${ipmiServer} -U $ipmiUser -P $ipmiPassword sol deactivate'
      CMD=`eval echo $RawCMD`

      DisplayCMD
      $CMD

      RawCMD='ipmitool -I lanplus -H ${ipmiServer} -U $ipmiUser -P $ipmiPassword sol activate'
      CMD=`eval echo $RawCMD`

      DisplayCMD
      $CMD

      echo;echo "Hit ENTER"
      read a
    ;;

    #------------------------------------------------------------------------------------
    # sol deactivate

    "sol deactivate")
      RawCMD='ipmitool -I lanplus -H ${ipmiServer} -U $ipmiUser -P $ipmiPassword sol deactivate'
      CMD=`eval echo $RawCMD`

      DisplayCMD
      $CMD

      echo;echo "Hit ENTER"
      read a
    ;;

    #------------------------------------------------------------------------------------
    # ping

    "ping")

      echo -e "Continuous ping or just once (once is the default) 1/c: \c"
      read HowMany
      case $HowMany in
        c|C)
         RawCMD='ping ${ipmiServer}'
        ;;
        *)
         RawCMD='ping -c1 ${ipmiServer}'
        ;;
      esac

      CMD=`eval echo $RawCMD`

      DisplayCMD
      $CMD

      echo;echo "Hit ENTER"
      read a
    ;;

    #------------------------------------------------------------------------------------
    # ipmitool shell

    shell)
      RawCMD='ipmitool -I lanplus -H ${ipmiServer} -U $ipmiUser -P $ipmiPassword shell'
      CMD=`eval echo $RawCMD`

      DisplayCMD
      $CMD

      echo;echo "Hit ENTER"
      read a
    ;;


    #------------------------------------------------------------------------------------
    # ssh to FSP/BMC

    ssh)
      RawCMD='sshpass -p $ipmiPassword ssh $SSHOptions ${ipmiUser}@${ipmiServer}'
      CMD=`eval echo $RawCMD`

      DisplayCMD
      eval $CMD # without eval, prb with SSHOptions

      echo;echo "Hit ENTER"
      read a
    ;;

    #------------------------------------------------------------------------------------
    # ssh to Linux Operating System

    linux)
      RawCMD='ssh $SSHOptions ${MyAccount}@${Server}'
      CMD=`eval echo $RawCMD`

      DisplayCMD
      eval $CMD # without eval, prb with SSHOptions

      echo;echo "Hit ENTER"
      read a
    ;;

    #------------------------------------------------------------------------------------
    # EXIT Requested

    exit|x)
     echo "Exiting as requested"
     echo "Bye !!"
     echo
     Choice=0
     ;;
  esac
done
