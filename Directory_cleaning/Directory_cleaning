#!/bin/bash


# Objective is to delete 
#   - too old files in a given directory
# Author: Fabrice MOYEN
# Date: 2022/01/11

#---------------------------------------------------------------
# VARIABLES

option=""
option_d=""
option_o=""
Delete=1



#---------------------------------------------------------------
# GETOPTS

while getopts ":d:o:hs" option
do
  case $option in
    d  )
      option_d=$OPTARG
    ;;
    o  )
      option_o=$OPTARG
    ;;
    h  )
        echo
        echo "Usage: "
        echo "------ "
        echo "   $0 -d /path/to_the/directory_to_clean"
        echo
        echo "      -o Number_of_Days : Files older than Number_of_Days (not accessed) will be deleted"
        echo
        echo "      -s (Optional)  : We will just show the files that would be deleted if no -s option (here the tool will NOT delete any file"
        echo
        echo "      -h (Optional)  : Just to display this usage information"
        echo
        exit 2
    ;;
    s )
        Delete=0
    ;;

    \? ) echo "Unknown option: -$OPTARG" >&2; exit 1;;
    :  ) echo "Missing option argument for -$OPTARG" >&2; exit 1;;
    *  ) echo "Unimplemented option: -$OPTARG" >&2; exit 1;;
  esac
done

if [ "$option_d" == "" ] || [ "$option_o" == "" ]; then
   echo
   echo "At least one Mandatory option is missing"
   echo
   echo "MANDATORY --> -d /path/to_the/directory_to_clean -o Number_of_Days"
   echo "More info --> $0 -h"
   echo
   echo "Exiting !"
   exit 1
fi


#---------------------------------------------------------------
# MAIN

ImagesDir=$option_d
OlderThanXDays=$option_o

echo;echo "***************************************************************************************************"
echo "Directory to clean : $ImagesDir"
echo "Criteria: Files older than $OlderThanXDays days"
if [ $Delete -eq 1 ]; then echo "We're going to DELETE these files !"; else echo "We're NOT going to delete anything !"; fi
echo "***************************************************************************************************"

if [ $Delete -eq 1 ]; then
	echo "  -> Deleting FPGA binary images which modifications are older than $OlderThanXDays days..."
	echo
	#find $ImagesDir -type f,l -mtime +$OlderThanXDays -exec rm {} \; -print
	find $ImagesDir -type f -mtime +$OlderThanXDays -exec rm {} \; -print
	find $ImagesDir -type l -mtime +$OlderThanXDays -exec rm {} \; -print

	echo;echo "***************************************************************************************************"
	echo "  -> Deleting empty directories..."
	echo
	for i in `ls -d $ImagesDir/*/*/ 2>/dev/null`; do
		if [ -z "$(ls -A $i)" ]; then
			echo $i
			rmdir $i
	  	fi
	done
	for i in `ls -d $ImagesDir/*/ 2>/dev/null`; do
		if [ -z "$(ls -A $i)" ]; then
			echo $i
			rmdir $i
	  	fi
	done
else
	echo "  -> Showing (but not deleting) FPGA binary images which modifications are older than $OlderThanXDays days..."
	echo
	#find $ImagesDir -type f,l -mtime +$OlderThanXDays -exec ls -la {} \; -print
	find $ImagesDir -type f -mtime +$OlderThanXDays -exec ls -la {} \; -print
	find $ImagesDir -type l -mtime +$OlderThanXDays -exec ls -la {} \; -print
fi

echo;echo "***************************************************************************************************"

